library(tidyverse)
library(reshape2)
library(plyr)
library(doBy)
#### REPLACE THIS WITH YOUR EDITED FILE
myPWide <- read.csv("F:/Google Drive/GitHub Repos/ste-phen/summer_school_sessions/9_Hypothesis_Challenge/myPredictions-Wide-Sample.csv")
myPWide
library(tidyverse)
library(reshape2)
library(plyr)
library(doBy)
#### REPLACE THIS WITH YOUR EDITED FILE
myPWide <- read.csv("F:/Google Drive/GitHub Repos/ste-phen/summer_school_sessions/9_Hypothesis_Challenge/myPredictions-Wide-Sample.csv")
myPWide
colnames(myPWide) <- c("Inducer", "Affect EB", "Affect HS", "Affect PD", "Affect SC",
"Pitch", "Amplitude", "Noise", "Size", "Shape", "Speed", "Brightness",
"Color RB", "Color RG", "Color RY", "Color YB")
myPLong <- melt(myPWide,
variable.name = "Concurrent",
value.name = "Prediction",
id.vars = "Inducer")
myPLong <- separate(data=myPLong, col= Inducer,     #split columns back up for subsetting
into= c("IndType", "IndToken"), sep = " ", remove = FALSE)
myPLong <- separate(data=myPLong, col= Concurrent,
into= c("ConType", "ConToken"), sep = " ", remove = FALSE)
myPLong <- subset(myPLong, IndType != ConType)
# Code the comparison column into the SSData frame
myPLong$IndCon <- paste(myPLong$Inducer, myPLong$Concurrent, sep = '-')
myPLong$ConInd <- paste(myPLong$Inducer, myPLong$Concurrent, sep = '-')
myPLong$Comparison <- paste(myPLong$Inducer, myPLong$Concurrent, sep = '-') #Make a comparison column
myPLong <- arrange(myPLong, Comparison)  # Order the data frame alphabetically by the comparison column
delRows = NULL # the rows to be removed
for(i in 1:nrow(myPLong)){
j = which(myPLong$Inducer == myPLong$Concurrent[i] & myPLong$Concurrent == myPLong$Inducer[i])
j = j [j > i]
if (length(j) > 0){
delRows = c(delRows, j)
}
}
myPLong <- myPLong[-delRows,]
myPLong <- subset(myPLong, select = c(Inducer, Concurrent, Comparison, Prediction))
write.csv(myPLong, "F:/Google Drive/GitHub Repos/ste-phen/summer_school_sessions/9_Hypothesis_Challenge/myPredictions-Long-YOURNAME.csv")
myPLong <- read.csv("F:/Google Drive/GitHub Repos/ste-phen/summer_school_sessions/9_Hypothesis_Challenge/myPredictions-Long-YOURNAME.csv")
Predictions <- separate(data = myPLong, col = Comparison,
into = c("Left", "Right"),
sep = "-", remove = FALSE)
Pred1 <- Predictions
Pred2 <- Predictions
Pred1$Inducer <- Pred1$Left
Pred1$Concurrent <- Pred1$Right
Pred2$Inducer <- Pred2$Right
Pred2$Concurrent <- Pred2$Left
Predictions <- rbind(Pred1, Pred2)
Predictions <- subset(Predictions, select = c("Inducer", "Concurrent", "Comparison", "Prediction"))
Domains <- sort(unique(Predictions$Inducer))
HighValues <- c("Excited/Bored", "Happy/Sad", "Pleased/Disgusted", "Stressed/Calm",
"Loud/Quiet", "Bright/Dark", "Red/Blue", "Red/Green", "Red/Yellow",
"Yellow/Blue", "Noisy/Tonal", "High Pitch/Low Pitch", "Jagged/Curvy",
"Large/Small", "Fast/Slow")
Predictions$Inducer2 <- mapvalues(Predictions$Inducer, from = Domains, to= HighValues)
Predictions$Concurrent2 <- mapvalues(Predictions$Concurrent, from = Domains, to= HighValues)
Predictions$Inducer2 <- factor(Predictions$Inducer2,
level = c("Excited/Bored", "Happy/Sad", "Pleased/Disgusted",
"Stressed/Calm", "Loud/Quiet", "Bright/Dark", "Red/Blue",
"Red/Green", "Red/Yellow", "Yellow/Blue", "Noisy/Tonal",
"High Pitch/Low Pitch", "Jagged/Curvy", "Large/Small",
"Fast/Slow"))
Predictions$Concurrent2 <- factor(Predictions$Concurrent2,
level = c("Excited/Bored", "Happy/Sad", "Pleased/Disgusted",
"Stressed/Calm", "Loud/Quiet", "Bright/Dark", "Red/Blue",
"Red/Green", "Red/Yellow", "Yellow/Blue", "Noisy/Tonal",
"High Pitch/Low Pitch", "Jagged/Curvy", "Large/Small",
"Fast/Slow"))
Predictions$Prediction <-as.numeric(Predictions$Prediction)
ggplot(data= Predictions, aes(x=Concurrent2, y=Inducer2, fill=Prediction)) +
geom_tile(color = "white") +
ggtitle("Biases - My Predictions") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0.5, limit = c(0,1),
name="Direction and Strength of Associaton") +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
#### REPLACE THIS WITH YOUR EDITED FILE
myPWide <- read.csv("F:/Google Drive/GitHub Repos/ste-phen/summer_school_sessions/9_Hypothesis_Challenge/myPredictions-Wide-Sample.csv")
myPWide
colnames(myPWide) <- c("Inducer", "Affect EB", "Affect HS", "Affect PD", "Affect SC",
"Pitch", "Amplitude", "Noise", "Size", "Shape", "Speed", "Brightness",
"Color RB", "Color RG", "Color RY", "Color YB")
myPLong <- melt(myPWide,
variable.name = "Concurrent",
value.name = "Prediction",
id.vars = "Inducer")
myPLong <- separate(data=myPLong, col= Inducer,     #split columns back up for subsetting
into= c("IndType", "IndToken"), sep = " ", remove = FALSE)
myPLong <- separate(data=myPLong, col= Concurrent,
into= c("ConType", "ConToken"), sep = " ", remove = FALSE)
myPLong <- subset(myPLong, IndType != ConType)
# Code the comparison column into the SSData frame
myPLong$IndCon <- paste(myPLong$Inducer, myPLong$Concurrent, sep = '-')
myPLong$ConInd <- paste(myPLong$Inducer, myPLong$Concurrent, sep = '-')
myPLong$Comparison <- paste(myPLong$Inducer, myPLong$Concurrent, sep = '-') #Make a comparison column
myPLong <- arrange(myPLong, Comparison)  # Order the data frame alphabetically by the comparison column
delRows = NULL # the rows to be removed
for(i in 1:nrow(myPLong)){
j = which(myPLong$Inducer == myPLong$Concurrent[i] & myPLong$Concurrent == myPLong$Inducer[i])
j = j [j > i]
if (length(j) > 0){
delRows = c(delRows, j)
}
}
myPLong <- myPLong[-delRows,]
myPLong <- subset(myPLong, select = c(Inducer, Concurrent, Comparison, Prediction))
write.csv(myPLong, "F:/Google Drive/GitHub Repos/ste-phen/summer_school_sessions/9_Hypothesis_Challenge/myPredictions-Long-YOURNAME.csv")
