cleandata <- read.csv(
"F:/Github Repos/STE-PHEN/summer_school_sessions/11_descriptive_stats/cleandataN.csv")
library(plyr)
library(tidyverse)
maindata <- subset(cleandata, DataSet == "Main")
pilotdata <- subset(cleandata, DataSet == "Pilot")
ggplot(maindata, aes(sample = Response, colour= Condition)) +
stat_qq(aes(shape = Condition))+
ggtitle("qq Plots of Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
dataagg1 <- aggregate(Response ~ Comparison + Condition + Subject, data = maindata, mean)
ggplot(dataagg1, aes(sample = Response, colour= Condition)) +
stat_qq(aes(shape = Condition))+
ggtitle("qq Plots of Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
dataagg2 <- aggregate(Response ~ Condition + Subject, data = maindata, mean)
ggplot(dataagg2, aes(sample = Response, colour= Condition)) +
stat_qq(aes(shape = Condition))+
ggtitle("qq Plots of Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
dataagg3 <- aggregate(Response ~ Comparison + Condition, data = maindata, mean)
ggplot(dataagg3, aes(sample = Response, colour= Condition)) +
stat_qq(aes(shape = Condition))+
ggtitle("qq Plots of Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
dataagg4 <- aggregate(Response~Comparison, data=maindata, mean)
means<- as.data.frame(xtabs(Response ~ Comparison, data=dataagg4))
means
CleanDataAgg <- aggregate(Response ~ DataSet + Inducer + Concurrent + Comparison,
data= cleandata, mean)
Domains <- sort(unique(CleanDataAgg$Inducer))
HighValues <- c("Excited/Bored", "Happy/Sad", "Pleased/Disgusted", "Stressed/Calm",
"Loud/Quiet", "Bright/Dark", "Red/Blue", "Red/Green", "Red/Yellow",
"Yellow/Blue", "Noisy/Tonal", "High Pitch/Low Pitch", "Jagged/Curvy",
"Large/Small", "Fast/Slow")
CleanDataAgg$Inducer2 <- mapvalues(CleanDataAgg$Inducer, from = Domains, to= HighValues)
CleanDataAgg$Concurrent2 <- mapvalues(CleanDataAgg$Concurrent, from = Domains, to= HighValues)
PilotDataAgg <- subset(CleanDataAgg, DataSet == "Pilot")
ggplot(data= PilotDataAgg, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - Pilot Data") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0.5, limit = c(0,1),
name="Direction and Strength of Associaton") +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
MainDataAgg <- subset(CleanDataAgg, DataSet == "Main")
ggplot(data= MainDataAgg, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - Main Data") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0.5, limit = c(0,1),
name="Direction and Strength of Associaton") +
geom_text(aes(label = round(Response, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
DiffDataAgg <- MainDataAgg
DiffDataAgg$DataSet <- "Difference"
DiffDataAgg$Response <- abs(MainDataAgg$Response - PilotDataAgg$Response)
ggplot(data= DiffDataAgg, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - Mismatch Between Imputed and Actual Values") +
scale_fill_gradient2(low = "white", high = "red",
name="Mismatch") +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
alldataAgg <- subset(CleanDataAgg, DataSet != "Simulated")
ggplot(data= alldataAgg, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - All Data") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0.5, limit = c(0,1),
name="Direction and Strength of Associaton") +
geom_text(aes(label = round(Response, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed() +
facet_wrap(~DataSet)
ggsave("Responses by DataSet.png", plot = last_plot(), device = NULL, path = NULL,
width = 16, height = 5, units = c("in", "cm", "mm"),
dpi = 300)
alldataAgg2 <- aggregate(Response ~ Inducer2 + Concurrent2, data= alldataAgg, mean)
ggplot(data= alldataAgg2, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - All Data") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0.5, limit = c(0,1),
name="Direction and Strength of Associaton") +
geom_text(aes(label = round(Response, 2)), size = 4) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 16))+
theme(axis.text.y = element_text(angle = 0, vjust = 1, hjust = 1, size = 16))+
coord_fixed()
ggsave("Responses - All Data.png", plot = last_plot(), device = NULL, path = NULL,
width = 12, height = 10, units = c("in", "cm", "mm"),
dpi = 300)
AllFullData <- summaryBy(Response ~
Subject + DataSet + Condition +
Inducer + Concurrent + Comparison,
data= alldata, Fun = c(mean))
AllFullData <- summaryBy(Response ~
Subject + DataSet + Condition +
Inducer + Concurrent + Comparison,
data= alldata, Fun = c(mean))
cleandata <- read.csv(
"F:/Github Repos/STE-PHEN/summer_school_sessions/11_descriptive_stats/cleandataN.csv")
library(plyr)
library(tidyverse)
maindata <- subset(cleandata, DataSet == "Main")
pilotdata <- subset(cleandata, DataSet == "Pilot")
ggplot(maindata, aes(sample = Response, colour= Condition)) +
stat_qq(aes(shape = Condition))+
ggtitle("qq Plots of Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
dataagg1 <- aggregate(Response ~ Comparison + Condition + Subject, data = maindata, mean)
ggplot(dataagg1, aes(sample = Response, colour= Condition)) +
stat_qq(aes(shape = Condition))+
ggtitle("qq Plots of Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
dataagg2 <- aggregate(Response ~ Condition + Subject, data = maindata, mean)
ggplot(dataagg2, aes(sample = Response, colour= Condition)) +
stat_qq(aes(shape = Condition))+
ggtitle("qq Plots of Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
dataagg3 <- aggregate(Response ~ Comparison + Condition, data = maindata, mean)
ggplot(dataagg3, aes(sample = Response, colour= Condition)) +
stat_qq(aes(shape = Condition))+
ggtitle("qq Plots of Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
dataagg4 <- aggregate(Response~Comparison, data=maindata, mean)
means<- as.data.frame(xtabs(Response ~ Comparison, data=dataagg4))
means
CleanDataAgg <- aggregate(Response ~ DataSet + Inducer + Concurrent + Comparison,
data= cleandata, mean)
Domains <- sort(unique(CleanDataAgg$Inducer))
HighValues <- c("Excited/Bored", "Happy/Sad", "Pleased/Disgusted", "Stressed/Calm",
"Loud/Quiet", "Bright/Dark", "Red/Blue", "Red/Green", "Red/Yellow",
"Yellow/Blue", "Noisy/Tonal", "High Pitch/Low Pitch", "Jagged/Curvy",
"Large/Small", "Fast/Slow")
CleanDataAgg$Inducer2 <- mapvalues(CleanDataAgg$Inducer, from = Domains, to= HighValues)
CleanDataAgg$Concurrent2 <- mapvalues(CleanDataAgg$Concurrent, from = Domains, to= HighValues)
PilotDataAgg <- subset(CleanDataAgg, DataSet == "Pilot")
ggplot(data= PilotDataAgg, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - Pilot Data") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0.5, limit = c(0,1),
name="Direction and Strength of Associaton") +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
MainDataAgg <- subset(CleanDataAgg, DataSet == "Main")
ggplot(data= MainDataAgg, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - Main Data") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0.5, limit = c(0,1),
name="Direction and Strength of Associaton") +
geom_text(aes(label = round(Response, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
DiffDataAgg <- MainDataAgg
DiffDataAgg$DataSet <- "Difference"
DiffDataAgg$Response <- abs(MainDataAgg$Response - PilotDataAgg$Response)
ggplot(data= DiffDataAgg, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - Mismatch Between Imputed and Actual Values") +
scale_fill_gradient2(low = "white", high = "red",
name="Mismatch") +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
library(doBy)
FullData <- summaryBy(Response ~
Subject + DataSet + Condition +
Inducer + Concurrent + Comparison,
data= maindata, Fun = c(mean))
library(powerAnalysis)
comparisons <- sort(unique(FullData$Comparison))
pvals <- list()
zvals <- list()
statvals <- list()
rm(comparison)
for(comparison in comparisons){
testdata <- subset(FullData, Comparison == comparison)
testres <- wilcox.test(testdata$Response, mu= 0.5, alternative = "two.sided")
pval <- testres$p.value
pvals <- c(pvals, pval)
testZ <- qnorm(pval/2)
zvals <- c(zvals, testZ)
teststat <- abs(testZ / (sqrt(nrow(testdata))))
statvals <- c(statvals, teststat)
}
MainDataAgg$pValue <- as.numeric(pvals)
MainDataAgg$ZValue <- as.numeric(zvals)
MainDataAgg$effsize <- as.numeric(statvals)
MainDataAgg$effsize <- ifelse(MainDataAgg$Response < 0.5,
MainDataAgg$effsize * -1,
MainDataAgg$effsize)
ggplot(data= MainDataAgg, aes(x=Concurrent2, y=Inducer2, fill=effsize)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", limit = c(-1,1),
name="Effect Size") +
geom_text(aes(label = round(effsize, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
MainDataAgg$correctedP <- MainDataAgg$pValue * 93
MainDataAgg$effsize2 <- as.numeric(ifelse(MainDataAgg$correctedP > 0.05,
"NA",
MainDataAgg$effsize))
ggplot(data= MainDataAgg, aes(x=Concurrent2, y=Inducer2, fill=effsize2)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", limit = c(-1,1),
name="Effect Size") +
geom_text(aes(label = round(effsize, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
MainDataAgg$Response2 <- as.numeric(ifelse(MainDataAgg$correctedP > 0.05,
"NA",
MainDataAgg$Response))
ggplot(data= MainDataAgg, aes(x=Concurrent2, y=Inducer2, fill=Response2)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", limit = c(0,1),
midpoint = 0.5, name="Significant Responses") +
geom_text(aes(label = round(Response, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
alldataAgg <- subset(CleanDataAgg, DataSet != "Simulated")
ggplot(data= alldataAgg, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - All Data") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0.5, limit = c(0,1),
name="Direction and Strength of Associaton") +
geom_text(aes(label = round(Response, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed() +
facet_wrap(~DataSet)
ggsave("Responses by DataSet.png", plot = last_plot(), device = NULL, path = NULL,
width = 16, height = 5, units = c("in", "cm", "mm"),
dpi = 300)
alldataAgg2 <- aggregate(Response ~ Inducer2 + Concurrent2, data= alldataAgg, mean)
ggplot(data= alldataAgg2, aes(x=Concurrent2, y=Inducer2, fill=Response)) +
geom_tile(color = "white") +
ggtitle("Biases - All Data") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0.5, limit = c(0,1),
name="Direction and Strength of Associaton") +
geom_text(aes(label = round(Response, 2)), size = 4) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 16))+
theme(axis.text.y = element_text(angle = 0, vjust = 1, hjust = 1, size = 16))+
coord_fixed()
ggsave("Responses - All Data.png", plot = last_plot(), device = NULL, path = NULL,
width = 12, height = 10, units = c("in", "cm", "mm"),
dpi = 300)
AllFullData <- summaryBy(Response ~
Subject + DataSet + Condition +
Inducer + Concurrent + Comparison,
data= alldata, Fun = c(mean))
alldata <- subset(cleandata, DataSet != "Simulated")
AllFullData <- summaryBy(Response ~
Subject + DataSet + Condition +
Inducer + Concurrent + Comparison,
data= alldata, Fun = c(mean))
comparisons <- sort(unique(AllFullData$Comparison))
pvals <- list()
zvals <- list()
statvals <- list()
rm(comparison)
for(comparison in comparisons){
testdata <- subset(AllFullData, Comparison == comparison)
testres <- wilcox.test(testdata$Response, mu= 0.5, alternative = "two.sided")
pval <- testres$p.value
pvals <- c(pvals, pval)
testZ <- qnorm(pval/2)
zvals <- c(zvals, testZ)
teststat <- abs(testZ / (sqrt(nrow(testdata))))
statvals <- c(statvals, teststat)
}
alldataAgg2$pValue <- as.numeric(pvals)
alldataAgg2$ZValue <- as.numeric(zvals)
alldataAgg2$effsize <- as.numeric(statvals)
alldataAgg2$effsize <- ifelse(alldataAgg2$Response < 0.5,
alldataAgg2$effsize * -1,
alldataAgg2$effsize)
ggplot(data= alldataAgg2, aes(x=Concurrent2, y=Inducer2, fill=effsize)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", limit = c(-1,1),
name="Effect Size") +
geom_text(aes(label = round(effsize, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
ggsave("Effect Sizes - All Data.png", plot = last_plot(), device = NULL, path = NULL,
width = 12, height = 10, units = c("in", "cm", "mm"),
dpi = 300)
alldataAgg2$correctedP <- alldataAgg2$pValue * 93
alldataAgg2$effsize2 <- as.numeric(ifelse(alldataAgg2$correctedP > 0.05,
"NA",
alldataAgg2$effsize))
ggplot(data= alldataAgg2, aes(x=Concurrent2, y=Inducer2, fill=effsize2)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", limit = c(-1,1),
name="Effect Size") +
geom_text(aes(label = round(effsize, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
ggsave("Effect Sizes - All Data - Significant.png", plot = last_plot(), device = NULL, path = NULL,
width = 12, height = 10, units = c("in", "cm", "mm"),
dpi = 300)
alldataAgg2$Response2 <- as.numeric(ifelse(alldataAgg2$correctedP > 0.05,
"NA",
alldataAgg2$Response))
ggplot(data= alldataAgg2, aes(x=Concurrent2, y=Inducer2, fill=Response2)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", limit = c(0,1),
midpoint = 0.5, name="Significant Responses") +
geom_text(aes(label = round(Response, 2)), size = 2) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))+
coord_fixed()
ggsave("Responses - All Data - Significant.png", plot = last_plot(), device = NULL, path = NULL,
width = 12, height = 10, units = c("in", "cm", "mm"),
dpi = 300)
####
alldataAgg2$Response3 <- as.numeric(ifelse(alldataAgg2$pValue > 0.05,
"NA",
alldataAgg2$Response))
ggplot(data= alldataAgg2, aes(x=Concurrent2, y=Inducer2, fill=Response3)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", limit = c(0,1),
midpoint = 0.5, name="Significant Responses") +
geom_text(aes(label = abs(round(effsize, 2))), size = 5) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 18))+
theme(axis.text.y = element_text(angle = 0, vjust = 1, hjust = 1, size = 18))+
coord_fixed()
ggsave("Responses - All Data - Significant - New.png", plot = last_plot(), device = NULL, path = NULL,
width = 12, height = 10, units = c("in", "cm", "mm"),
dpi = 300)
