geom_point(aes(col = Order, position = "jitter")) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order, width = 0.25)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order, width = 0.1)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order, width = 1)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order, width = .05)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order, width = .01)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order, width = .1, height= .1)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order, shape = Congruency)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
Exp1FullCorr <- lmer(RespCorr2.mean ~ Order * Congruency * Block + (1 + Block|Participant), data=Exp1Agg3, REML= FALSE)
#summary(Exp1FullCorr)
anova(Exp1FullCorr)
ggplot(data=Exp1Agg3, aes(x = Block, y = RespCorr2.mean, colour = conditions, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_jitter(aes(col = Order, shape = Congruency)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = LogRT.mean, y = RespCorr2.mean, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_point(aes(col = Order, shape = Congruency)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
Exp1FullCorr <- lmer(RespCorr2.mean ~ Order * Congruency * Block + (1 + Block|Participant), data=Exp1Agg3, REML= FALSE, family = "binomial'")
Exp1FullCorr <- glmer(RespCorr2.mean ~ Order * Congruency * Block + (1 + Block|Participant), data=Exp1Agg3, REML= FALSE, family = "binomial'")
Exp1FullCorr <- glmer(RespCorr2.mean ~ Order * Congruency * Block + (1 + Block|Participant), data=Exp1Agg3, REML= FALSE, family = binomial)
ggplot(data=Exp1Agg3, aes(x = RespCorr2.mean , y = LogRT.mean, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_point(aes(col = Order, shape = Congruency)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = RespCorr2.mean , y = LogRT.mean, group= conditions)) +
geom_line(aes(colour = Order, linetype= Congruency),size = 1,se = F)+
geom_point(aes(col = Order, shape = Congruency)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = RespCorr2.mean , y = LogRT.mean, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F, method = lm)+
geom_point(aes(col = Order, shape = Congruency)) +
ggtitle("Experiment 1 Correctness") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
ggplot(data=Exp1Agg3, aes(x = RespCorr2.mean , y = LogRT.mean, group= conditions)) +
geom_smooth(aes(colour = Order, linetype= Congruency),size = 1,se = F, method = lm)+
geom_point(aes(col = Order, shape = Congruency)) +
ggtitle("Experiment 1- Scatterplot of Correctness x LogRT") +
labs(x="Proportion Correct", y="LogRT") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666"))
str(Exp1)
library(reshape2)
library(ggplot2)
SimulatedData <- read.csv("F:/Google Drive/Experiments/Collaborations/Stekic et al/Repo/Data/Simulated Training Results.csv")
library(moments)
library(nortest)
library(e1071)
ggplot(SimulatedData, aes(sample = RT.1, colour= Congruency)) + #
geom_point(stat = "qq", aes(shape = CatVsItem)) +
ggtitle("qq Plots of Simulated Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Condition, ncol = 2)
SimulatedData$Condition2 <- factor(SimulatedData$Condition,
level = c("1", "2", "3A", "3B", "4", "5", "6A", "6B", "7", "8", "9", "10"),
labels = c("Category Congruent", "Category Incongruent", "Category Conventional 1", "Category Conventional 2",
"Item Congruent", "Item Incongruent", "Item Conventional 1", "Item Conventional 2",
"Arbitrary Half-Half 1", "Arbitrary Half-Half 2", "Arbitrary- Fully", "No Label"))
ggplot(SimulatedData, aes(x= Block, y= RT.6, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency),size = 1.5,se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Reaction Time Data by Condition") +
labs(x="Block", y="Reaction Time") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Condition2, ncol = 4) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(SimulatedData, aes(x= Block, y= RespCorr.6, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency),size = 1.5,se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Correctness Data by Condition") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Condition2, ncol = 4) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
library(reshape2)
library(ggplot2)
SimulatedData <- read.csv("F:/Google Drive/Experiments/Collaborations/Stekic et al/Repo/Data/Simulated Training Results.csv")
library(moments)
library(nortest)
library(e1071)
ggplot(SimulatedData, aes(sample = RT.1, colour= Congruency)) + #
geom_point(stat = "qq", aes(shape = CatVsItem)) +
ggtitle("qq Plots of Simulated Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Condition, ncol = 2)
ggplot(SimulatedData, aes(sample = RT.1, colour= Congruency)) + #
geom_point(stat = "qq", aes(shape = CatVsItem)) +
ggtitle("qq Plots of Simulated Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Condition)
SimulatedData$Condition2 <- factor(SimulatedData$Condition,
level = c("1", "2", "3A", "3B", "4", "5", "6A", "6B", "7", "8", "9", "10"),
labels = c("Category Congruent", "Category Incongruent", "Category Conventional 1", "Category Conventional 2",
"Item Congruent", "Item Incongruent", "Item Conventional 1", "Item Conventional 2",
"Arbitrary Half-Half 1", "Arbitrary Half-Half 2", "Arbitrary- Fully", "No Label"))
ggplot(SimulatedData, aes(sample = RT.1, colour= Congruency)) +
stat_qq(aes(shape = CatVsItem))+
ggtitle("qq Plots of Simulated Data by Condition") +
labs(x="", y="") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Condition2, ncol = 4) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
SimulatedData$Condition2 <- factor(SimulatedData$Condition,
level = c("1", "2", "3A", "3B", "4", "5", "6A", "6B", "7", "8", "9", "10"),
labels = c("Category Congruent", "Category Incongruent", "Category Conventional 1", "Category Conventional 2",
"Item Congruent", "Item Incongruent", "Item Conventional 1", "Item Conventional 2",
"Arbitrary Half-Half 1", "Arbitrary Half-Half 2", "Arbitrary- Fully", "No Label"))
ggplot(SimulatedData, aes(x= Block, y= RT.6, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency),size = 1.5,se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Reaction Time Data by Condition") +
labs(x="Block", y="Reaction Time") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Condition2, ncol = 4) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(SimulatedData, aes(x= Block, y= RespCorr.6, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency),size = 1.5,se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Correctness Data by Condition") +
labs(x="Block", y="Proportion Correct") +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Condition2, ncol = 4) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
SimulatedRTData <- subset(SimulatedData, select = c(Block, SubCondition, Condition, Condition2,
Congruency, CatVsItem, RT.1, RT.2, RT.3, RT.4, RT.5, RT.6))
SimulatedCorrectnessData <- subset(SimulatedData, select = c(Block, SubCondition, Condition, Condition2,
Congruency, CatVsItem, RespCorr.1, RespCorr.2, RespCorr.3, RespCorr.4, RespCorr.5, RespCorr.6))
MeltedRTData <- melt(SimulatedRTData,
variable.name = "Reaction Time",
id.vars = c ("Block", "SubCondition", "Condition", "Condition2", "Congruency", "CatVsItem" ))
names(MeltedRTData)[7] <- "Simulation"
names(MeltedRTData)[8] <- "ReactionTime"
ggplot(MeltedRTData, aes(x= Block, y= ReactionTime, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Reaction Time Data by Condition") +
labs(x="Block", y="Reaction Time") +
coord_cartesian(ylim = c(400, 1000)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
MeltedCorrectnessData <- melt(SimulatedCorrectnessData,
variable.name = "RespCorr",
id.vars = c ("Block", "SubCondition", "Condition", "Condition2", "Congruency", "CatVsItem" ))
names(MeltedCorrectnessData)[7] <- "Simulation"
names(MeltedCorrectnessData)[8] <- "RespCorr"
ggplot(MeltedCorrectnessData, aes(x= Block, y= RespCorr, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Proportion Correctby Condition") +
labs(x="Block", y="Proportion Correct") +
coord_cartesian(ylim = c(0, 1)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
SimulatedRTData <- subset(SimulatedData, select = c(Block, SubCondition, Condition, Condition2,
Congruency, CatVsItem, RT.1, RT.2, RT.3, RT.4, RT.5, RT.6))
SimulatedCorrectnessData <- subset(SimulatedData, select = c(Block, SubCondition, Condition, Condition2,
Congruency, CatVsItem, RespCorr.1, RespCorr.2, RespCorr.3, RespCorr.4, RespCorr.5, RespCorr.6))
MeltedRTData <- melt(SimulatedRTData,
variable.name = "Reaction Time",
id.vars = c ("Block", "SubCondition", "Condition", "Condition2", "Congruency", "CatVsItem" ))
names(MeltedRTData)[7] <- "Simulation"
names(MeltedRTData)[8] <- "ReactionTime"
MeltedRTData$Simulation2 <- factor(MeltedRTData$Simulation2,
level = c("RT.1", "RT.2", "RT.3", "RT.4", "RT.5", "RT.6"),
labels = c("Random", "BlockRT", "BlockRC", "BlockRTRC", "Condition", "Kat + Vanja"))
SimulatedRTData <- subset(SimulatedData, select = c(Block, SubCondition, Condition, Condition2,
Congruency, CatVsItem, RT.1, RT.2, RT.3, RT.4, RT.5, RT.6))
SimulatedCorrectnessData <- subset(SimulatedData, select = c(Block, SubCondition, Condition, Condition2,
Congruency, CatVsItem, RespCorr.1, RespCorr.2, RespCorr.3, RespCorr.4, RespCorr.5, RespCorr.6))
MeltedRTData <- melt(SimulatedRTData,
variable.name = "Reaction Time",
id.vars = c ("Block", "SubCondition", "Condition", "Condition2", "Congruency", "CatVsItem" ))
names(MeltedRTData)[7] <- "Simulation"
names(MeltedRTData)[8] <- "ReactionTime"
MeltedRTData$Simulation2 <- factor(MeltedRTData$Simulation,
level = c("RT.1", "RT.2", "RT.3", "RT.4", "RT.5", "RT.6"),
labels = c("Random", "BlockRT", "BlockRC", "BlockRTRC", "Condition", "Kat + Vanja"))
ggplot(MeltedRTData, aes(x= Block, y= ReactionTime, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Reaction Time Data by Condition") +
labs(x="Block", y="Reaction Time") +
coord_cartesian(ylim = c(400, 1000)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
MeltedCorrectnessData <- melt(SimulatedCorrectnessData,
variable.name = "RespCorr",
id.vars = c ("Block", "SubCondition", "Condition", "Condition2", "Congruency", "CatVsItem" ))
names(MeltedCorrectnessData)[7] <- "Simulation"
names(MeltedCorrectnessData)[8] <- "RespCorr"
MeltedCorrectnessData$Simulation2 <- factor(MeltedCorrectnessData$Simulation,
level = c("RespCorr.1", "RespCorr.2", "RespCorr.3", "RespCorr.4", "RespCorr.5", "RespCorr.6"),
labels = c("Random", "BlockRT", "BlockRC", "BlockRTRC", "Condition", "Kat + Vanja"))
ggplot(MeltedCorrectnessData, aes(x= Block, y= RespCorr, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Proportion Correctby Condition") +
labs(x="Block", y="Proportion Correct") +
coord_cartesian(ylim = c(0, 1)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
SimulatedRTData <- subset(SimulatedData, select = c(Block, SubCondition, Condition, Condition2,
Congruency, CatVsItem, RT.1, RT.2, RT.3, RT.4, RT.5, RT.6))
SimulatedCorrectnessData <- subset(SimulatedData, select = c(Block, SubCondition, Condition, Condition2,
Congruency, CatVsItem, RespCorr.1, RespCorr.2, RespCorr.3, RespCorr.4, RespCorr.5, RespCorr.6))
MeltedRTData <- melt(SimulatedRTData,
variable.name = "Reaction Time",
id.vars = c ("Block", "SubCondition", "Condition", "Condition2", "Congruency", "CatVsItem" ))
names(MeltedRTData)[7] <- "Simulation"
names(MeltedRTData)[8] <- "ReactionTime"
MeltedRTData$Simulation2 <- factor(MeltedRTData$Simulation,
level = c("RT.1", "RT.2", "RT.3", "RT.4", "RT.5", "RT.6"),
labels = c("Random", "BlockRT", "BlockRC", "BlockRTRC", "Condition", "Kat + Vanja"))
ggplot(MeltedRTData, aes(x= Block, y= ReactionTime, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Reaction Time Data by Simulation") +
labs(x="Block", y="Reaction Time") +
coord_cartesian(ylim = c(400, 1000)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
MeltedCorrectnessData <- melt(SimulatedCorrectnessData,
variable.name = "RespCorr",
id.vars = c ("Block", "SubCondition", "Condition", "Condition2", "Congruency", "CatVsItem" ))
names(MeltedCorrectnessData)[7] <- "Simulation"
names(MeltedCorrectnessData)[8] <- "RespCorr"
MeltedCorrectnessData$Simulation2 <- factor(MeltedCorrectnessData$Simulation,
level = c("RespCorr.1", "RespCorr.2", "RespCorr.3", "RespCorr.4", "RespCorr.5", "RespCorr.6"),
labels = c("Random", "BlockRT", "BlockRC", "BlockRTRC", "Condition", "Kat + Vanja"))
ggplot(MeltedCorrectnessData, aes(x= Block, y= RespCorr, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Proportion Correct by Simulation") +
labs(x="Block", y="Proportion Correct") +
coord_cartesian(ylim = c(0, 1)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(MeltedCorrectnessData, aes(x= Block, y= RespCorr, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Proportion Correct by Simulation") +
scale_y_continuous("Proportion Correct", breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0", "1"), limits = c(0, 1)) +
scale_x_continuous("Block", breaks = c(1,9), labels = c("1","9"), limits = c(1, 9)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(MeltedCorrectnessData, aes(x= Block, y= RespCorr, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Proportion Correct by Simulation") +
scale_y_continuous("Proportion Correct", breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0", "0.25", "0.5", "0.75", "1"), limits = c(0, 1)) +
scale_x_continuous("Block", breaks = c(1,9), labels = c("1","9"), limits = c(1, 9)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(MeltedCorrectnessData, aes(x= Block, y= RespCorr, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Proportion Correct by Simulation") +
scale_y_continuous("Proportion Correct", breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0", "0.25", "0.5", "0.75", "1"), limits = c(0, 1)) +
scale_x_continuous("Block", breaks = c(1,2,3,4,5,6,7,8,9), limits = c(1, 9)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(MeltedRTData, aes(x= Block, y= ReactionTime, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Reaction Time Data by Simulation") +
labs(x="Block", y="Reaction Time") +
scale_y_continuous("Proportion Correct", breaks = c(400, 600, 800, 1000), labels = c("400", "600", "800", "1000"), limits = c(400 , 1000)) +
scale_x_continuous("Block", breaks = c(1,2,3,4,5,6,7,8,9), limits = c(1, 9)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(MeltedRTData, aes(x= Block, y= ReactionTime, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Reaction Time Data by Simulation") +
scale_y_continuous("Reaction Time", breaks = c(0, 500, 1000, 1500), labels = c("0", "500", "1000", "1500"), limits = c(0 , 1500)) +
scale_x_continuous("Block", breaks = c(1,2,3,4,5,6,7,8,9), limits = c(1, 9)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(MeltedRTData, aes(x= Block, y= ReactionTime, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Reaction Time Data by Simulation") +
scale_y_continuous("Reaction Time", breaks = c(0, 500, 1000, 1500), labels = c("0", "500", "1000", "1500"), limits = c(0 , 1500)) +
scale_x_continuous("Block", breaks = c(1,2,3,4,5,6,7,8,9), limits = c(1, 9)) +
coord_cartesian(xlim = c(400, 1000)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(MeltedRTData, aes(x= Block, y= ReactionTime, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Reaction Time Data by Simulation") +
scale_y_continuous("Reaction Time", breaks = c(0, 500, 1000, 1500), labels = c("0", "500", "1000", "1500"), limits = c(0 , 1500)) +
scale_x_continuous("Block", breaks = c(1,2,3,4,5,6,7,8,9), limits = c(1, 9)) +
coord_cartesian(ylim = c(400, 1000)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(MeltedCorrectnessData, aes(x= Block, y= RespCorr, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Proportion Correct by Simulation") +
scale_y_continuous("Proportion Correct", breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c("0", "0.25", "0.5", "0.75", "1"), limits = c(0, 1)) +
scale_x_continuous("Block", breaks = c(1,2,3,4,5,6,7,8,9), limits = c(1, 9)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(~ Simulation2, ncol = 2) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
MeltedCorrectnessData$Condition2 <- factor(MeltedCorrectnessData$Condition,
level = c("1", "2", "3A", "3B", "4", "5", "6A", "6B", "7", "8", "9", "10"),
labels = c("Category Congruent", "Category Incongruent", "Category Conventional 1", "Category Conventional 2",
"Item Congruent", "Item Incongruent", "Item Conventional 1", "Item Conventional 2",
"Arbitrary Half-Half 1", "Arbitrary Half-Half 2", "Arbitrary- Fully", "No Label"))
ggplot(MeltedCorrectnessData, aes(x= Block, y= RespCorr, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.8, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Proportion Correct by Condition by Simulation") +
labs(x="Block", y="Proportion Correct") +
coord_cartesian(ylim = c(0, 1)) +
theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_wrap(Condition2 ~ Simulation, ncol = 6) +
theme(strip.text.x = element_text(size = 8, colour = "black"))
ggplot(MeltedCorrectnessData, aes(x= Block, y= RespCorr, colour= Congruency)) +
geom_point(aes(shape = CatVsItem), alpha = 0.4, size = 0.4) +
geom_smooth(aes(colour = Congruency, linetype = CatVsItem),size = 0.5, alpha = 0.4, se = F, method= 'loess', formula =  y~x)+
ggtitle("Simulated Proportion Correct by Condition by Simulation") +
scale_y_continuous("Proportion Correct", breaks = c(0, 1), labels = c("0", "1"), limits = c(0, 1)) +
scale_x_continuous("Block", breaks = c(1,9), labels = c("1","9"), limits = c(1, 9)) +
#theme(axis.title.y = element_text(size=12,  color="#666666")) +
theme(axis.text = element_text(size=8)) +
theme(plot.title = element_text(size=16, face="bold", hjust=0, color="#666666")) +
facet_grid(Condition2 ~ Simulation) +
theme(strip.text.x = element_text(size = 8, colour = "black"),
strip.text.y = element_text(size = 8, colour = "black", angle = 0),
strip.background = element_rect(fill= "#FFFFFF"))
Name <- c("Alan", "Alano", "Alaniel", "Alanthew", "Alanus")
Semester1 <- c(71, 75, 84, 61, 96)
Semester2 <- c(74, 75, 87, 68, 94)
Semester3 <- c(79, 78, 88, 72, 74)
Semester4 <- c(77, 80, 83, 76, 82)
Semester5 <- c(84, 85, 77, 81, 54)
PlayData <- as.data.frame(cbind(Name, Semester1, Semester2, Semester3, Semester4, Semester5))
read.csv(file.choose())
list <- read.csv(file.choose())
View(list)
install.packages(stringr)
install.packages('stringr')
str_sub(list$condition, 1, str_length(list$condition)-4)
library(stringr)
str_sub(list$condition, 1, str_length(list$condition)-4)
View(list)
list2 <- str_sub(list$condition, 1, str_length(list$condition)-4)
list2 <- as.data.frame(str_sub(list$condition, 1, str_length(list$condition)-4))
View(list2)
names(list2)[1] <- condition
names(list2)[1] <- "condition"
View(list2)
setwd(F:/Google Drive/GitHub Repos/Crossmodality-Toolkit/Stimuli/Stimlists/Affect)
setwd(F:\Google Drive\GitHub Repos\Crossmodality-Toolkit\Stimuli\Stimlists\Affect)
setwd('F:/Google Drive/GitHub Repos/Crossmodality-Toolkit/Stimuli/Stimlists/Affect')
write.csv(list2, "ConditionList2.csv")
write.csv(list2, "ConditionList2.csv", row.names = FALSE)
